!function(t){try{t=angular.module("abacus.templates")}catch(e){t=angular.module("abacus.templates",[])}t.run(["$templateCache",function(t){"use strict";t.put("templates/barChart.html","")}])}(),function(t){try{t=angular.module("abacus.templates")}catch(e){t=angular.module("abacus.templates",[])}t.run(["$templateCache",function(t){"use strict";t.put("templates/pieChart.html",'<svg ng-attr-width="{{ size }}" ng-attr-height="{{ size }}">\n  <g>\n    <g\n      ng-attr-stroke="{{ colors[$index] }}"\n      ng-attr-fill="{{ colors[$index] }}"\n      ng-repeat="sector in sectors">\n      <path\n        ng-attr-d="\n        M {{ sector[0][0] }} {{ sector[0][1] }}\n        L {{ sector[1][0] }} {{ sector[1][1] }}\n        A {{ radius }} {{ radius }} 0 {{ angles[$index] >= 180 ? 1 : 0 }} 1 {{ sector[2][0] }} {{ sector[2][1] }}\n        L {{ sector[0][0] }} {{ sector[0][1] }}\n        "\n      ></path>\n    </g>\n  </g>\n</svg>\n{{ angles }}\n')}])}(),function(){"use strict";angular.module("abacus",["abacus.templates"])}(),function(){angular.module("abacus").factory("$abacus",function(){var t={};return t.defaultColors=["#3366cc","#dc3912","#ff9900","#109618","#990099","#0099c6","#dd4477","#66aa00","#b82e2e","#316395","#994499","#22aa99","#aaaa11","#6633cc","#e67300","#8b0707","#651067","#329262","#5574a6","#3b3eac","#b77322","#16d620","#b91383","#f4359e","#9c5935","#a9c413","#2a778d","#668d1c","#bea413","#0c5922","#743411"],t.getColors=function(e){for(var a=new Array(e),n=0;e>n;n++)a[n]=t.defaultColors[n%t.defaultColors.length];return a},t})}(),function(){"use strict";angular.module("abacus").factory("PieChart",["$abacus",function(t){var e=function(t,e){this.scope=t,this.element=e,t.$watchCollection("data",this.refreshScope.bind(this)),t.$watch("size",this.refreshScope.bind(this))};return e.prototype.refreshScope=function(){this.scope.sectors=this.calculateSectors(),this.scope.radius=this.getRadius(),this.scope.angles=this.calculateAngles(),this.scope.colors=t.getColors(this.scope.sectors.length)},e.prototype.getValues=function(){return this.scope.data},e.prototype.getSize=function(){return this.scope.size},e.prototype.getRadius=function(){return this.getSize()/2},e.prototype.getMidPoint=function(){return[this.getSize()/2,this.getSize()/2]},e.prototype.calculateTotal=function(){return this.getValues().reduce(function(t,e){return t+e})},e.prototype.calculateAngles=function(){var t=this.getValues(),e=this.calculateTotal();return t.map(function(t){return t/e*360})},e.prototype.angleToCartesian=function(t){var e=this.getMidPoint(),a=this.getRadius(),n=Math.PI/180*t,s=e[0]+a*Math.cos(n),r=e[1]+a*Math.sin(n);return[s,r]},e.prototype.calculateSectors=function(){var t=this.calculateAngles(),e=this.getMidPoint(),a=new Array(t.length);a[0]=[e,this.angleToCartesian(0),this.angleToCartesian(t[0])];for(var n=1,s=t.length;s>n;n++)t[n]+=t[n-1],a[n]=[e,this.angleToCartesian(t[n-1]),this.angleToCartesian(t[n])];return a},e.prototype.destroy=function(){this.scope=this.element=null},e}])}(),function(){"use strict"}(),function(){"use strict";angular.module("abacus").directive("abcPieChart",["PieChart",function(t){return{restrict:"E",templateUrl:"templates/pieChart.html",scope:{data:"=",size:"="},link:function(e,a){e.pieChart=new t(e,a),e.$on("$destroy",function(){e.pieChart.destroy()})}}}])}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlbXBsYXRlcy5qcyIsImFiYWN1cy5qcyIsInBpZUNoYXJ0LmpzIiwiYmFyQ2hhcnQuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiYW5ndWxhciIsImVyciIsInJ1biIsIiR0ZW1wbGF0ZUNhY2hlIiwicHV0IiwiZmFjdG9yeSIsImFiYWN1cyIsImRlZmF1bHRDb2xvcnMiLCJnZXRDb2xvcnMiLCJuYnJPZkNvbG9ycyIsImNvbG9ycyIsIkFycmF5IiwiaSIsImxlbmd0aCIsIiRhYmFjdXMiLCJQaWVDaGFydCIsInNjb3BlIiwiZWxlbWVudCIsInRoaXMiLCIkd2F0Y2hDb2xsZWN0aW9uIiwicmVmcmVzaFNjb3BlIiwiYmluZCIsIiR3YXRjaCIsInByb3RvdHlwZSIsInNlY3RvcnMiLCJjYWxjdWxhdGVTZWN0b3JzIiwicmFkaXVzIiwiZ2V0UmFkaXVzIiwiYW5nbGVzIiwiY2FsY3VsYXRlQW5nbGVzIiwiZ2V0VmFsdWVzIiwiZGF0YSIsImdldFNpemUiLCJzaXplIiwiZ2V0TWlkUG9pbnQiLCJjYWxjdWxhdGVUb3RhbCIsInJlZHVjZSIsImEiLCJiIiwidmFsdWVzIiwidG90YWwiLCJtYXAiLCJ2YWx1ZSIsImFuZ2xlVG9DYXJ0ZXNpYW4iLCJhbmdsZSIsIm1pZFBvaW50IiwiYW5nbGVJblJhZGlhbnMiLCJNYXRoIiwiUEkiLCJ4IiwiY29zIiwieSIsInNpbiIsImwiLCJkZXN0cm95IiwiZGlyZWN0aXZlIiwicmVzdHJpY3QiLCJ0ZW1wbGF0ZVVybCIsImxpbmsiLCJwaWVDaGFydCIsIiRvbiJdLCJtYXBwaW5ncyI6IkNBQUEsU0FBQUEsR0FDQSxJQUFBQSxFQUFBQyxRQUFBRCxPQUFBLG9CQUNBLE1BQUFFLEdBQUFGLEVBQUFDLFFBQUFELE9BQUEsdUJBQ0FBLEVBQUFHLEtBQUEsaUJBQUEsU0FBQUMsR0FDQSxZQUNBQSxHQUFBQyxJQUFBLDBCQUNBLFVBSUEsU0FBQUwsR0FDQSxJQUFBQSxFQUFBQyxRQUFBRCxPQUFBLG9CQUNBLE1BQUFFLEdBQUFGLEVB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QWYsRUFBQWhCLElBSUEsT0FBQVksSUFHQVQsRUFBQVEsVUFBQStCLFFBQUEsV0FDQXBDLEtBQUFGLE1BQUFFLEtBQUFELFFBQUEsTUFHQUYsUUNyR0EsV0FDQSxnQkREQSxXQUNBLFlBRUFmLFNBQUFELE9BQUEsVUFFQXdELFVBQUEsZUFBQSxXQUFBLFNBQUF4QyxHQUNBLE9BQ0F5QyxTQUFBLElBQ0FDLFlBQUEsMEJBQ0F6QyxPQUNBZSxLQUFBLElBQ0FFLEtBQUEsS0FFQXlCLEtBQUEsU0FBQTFDLEVBQUFDLEdBQ0FELEVBQUEyQyxTQUFBLEdBQUE1QyxHQUFBQyxFQUFBQyxHQUVBRCxFQUFBNEMsSUFBQSxXQUFBLFdBQ0E1QyxFQUFBMkMsU0FBQUwiLCJmaWxlIjoiYWJhY3VzLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7IG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdhYmFjdXMudGVtcGxhdGVzJyk7IH1cbmNhdGNoKGVycikgeyBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgnYWJhY3VzLnRlbXBsYXRlcycsIFtdKTsgfVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ3RlbXBsYXRlcy9iYXJDaGFydC5odG1sJyxcbiAgICAnJyk7XG59XSk7XG59KSgpO1xuXG4oZnVuY3Rpb24obW9kdWxlKSB7XG50cnkgeyBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgnYWJhY3VzLnRlbXBsYXRlcycpOyB9XG5jYXRjaChlcnIpIHsgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ2FiYWN1cy50ZW1wbGF0ZXMnLCBbXSk7IH1cbm1vZHVsZS5ydW4oWyckdGVtcGxhdGVDYWNoZScsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICd1c2Ugc3RyaWN0JztcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCd0ZW1wbGF0ZXMvcGllQ2hhcnQuaHRtbCcsXG4gICAgJzxzdmcgbmctYXR0ci13aWR0aD1cInt7IHNpemUgfX1cIiBuZy1hdHRyLWhlaWdodD1cInt7IHNpemUgfX1cIj5cXG4nICtcbiAgICAnICA8Zz5cXG4nICtcbiAgICAnICAgIDxnXFxuJyArXG4gICAgJyAgICAgIG5nLWF0dHItc3Ryb2tlPVwie3sgY29sb3JzWyRpbmRleF0gfX1cIlxcbicgK1xuICAgICcgICAgICBuZy1hdHRyLWZpbGw9XCJ7eyBjb2xvcnNbJGluZGV4XSB9fVwiXFxuJyArXG4gICAgJyAgICAgIG5nLXJlcGVhdD1cInNlY3RvciBpbiBzZWN0b3JzXCI+XFxuJyArXG4gICAgJyAgICAgIDxwYXRoXFxuJyArXG4gICAgJyAgICAgICAgbmctYXR0ci1kPVwiXFxuJyArXG4gICAgJyAgICAgICAgTSB7eyBzZWN0b3JbMF1bMF0gfX0ge3sgc2VjdG9yWzBdWzFdIH19XFxuJyArXG4gICAgJyAgICAgICAgTCB7eyBzZWN0b3JbMV1bMF0gfX0ge3sgc2VjdG9yWzFdWzFdIH19XFxuJyArXG4gICAgJyAgICAgICAgQSB7eyByYWRpdXMgfX0ge3sgcmFkaXVzIH19IDAge3sgYW5nbGVzWyRpbmRleF0gPj0gMTgwID8gMSA6IDAgfX0gMSB7eyBzZWN0b3JbMl1bMF0gfX0ge3sgc2VjdG9yWzJdWzFdIH19XFxuJyArXG4gICAgJyAgICAgICAgTCB7eyBzZWN0b3JbMF1bMF0gfX0ge3sgc2VjdG9yWzBdWzFdIH19XFxuJyArXG4gICAgJyAgICAgICAgXCJcXG4nICtcbiAgICAnICAgICAgPjwvcGF0aD5cXG4nICtcbiAgICAnICAgIDwvZz5cXG4nICtcbiAgICAnICA8L2c+XFxuJyArXG4gICAgJzwvc3ZnPlxcbicgK1xuICAgICd7eyBhbmdsZXMgfX1cXG4nICtcbiAgICAnJyk7XG59XSk7XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICBhbmd1bGFyLm1vZHVsZSgnYWJhY3VzJylcblxuICAuZmFjdG9yeSgnJGFiYWN1cycsIGZ1bmN0aW9uKCkge1xuICAgIHZhciBhYmFjdXMgPSB7fTtcblxuICAgIGFiYWN1cy5kZWZhdWx0Q29sb3JzID0gWycjMzM2NmNjJywnI2RjMzkxMicsJyNmZjk5MDAnLCcjMTA5NjE4JywnIzk5MDA5OScsJyMwMDk5YzYnLCcjZGQ0NDc3JywnIzY2YWEwMCcsJyNiODJlMmUnLCcjMzE2Mzk1JywnIzk5NDQ5OScsJyMyMmFhOTknLCcjYWFhYTExJywnIzY2MzNjYycsJyNlNjczMDAnLCcjOGIwNzA3JywnIzY1MTA2NycsJyMzMjkyNjInLCcjNTU3NGE2JywnIzNiM2VhYycsJyNiNzczMjInLCcjMTZkNjIwJywnI2I5MTM4MycsJyNmNDM1OWUnLCcjOWM1OTM1JywnI2E5YzQxMycsJyMyYTc3OGQnLCcjNjY4ZDFjJywnI2JlYTQxMycsJyMwYzU5MjInLCcjNzQzNDExJ107XG5cbiAgICBhYmFjdXMuZ2V0Q29sb3JzID0gZnVuY3Rpb24obmJyT2ZDb2xvcnMpIHtcbiAgICAgIHZhciBjb2xvcnMgPSBuZXcgQXJyYXkobmJyT2ZDb2xvcnMpO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG5ick9mQ29sb3JzOyBpKyspIHtcbiAgICAgICAgY29sb3JzW2ldID0gYWJhY3VzLmRlZmF1bHRDb2xvcnNbaSAlIGFiYWN1cy5kZWZhdWx0Q29sb3JzLmxlbmd0aF07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb2xvcnM7XG4gICAgfTtcblxuICAgIHJldHVybiBhYmFjdXM7XG4gIH0pO1xufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIGFuZ3VsYXIubW9kdWxlKCdhYmFjdXMnKVxuXG4gIC5kaXJlY3RpdmUoJ2FiY1BpZUNoYXJ0JywgWydQaWVDaGFydCcsIGZ1bmN0aW9uKFBpZUNoYXJ0KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlc3RyaWN0OiAnRScsXG4gICAgICB0ZW1wbGF0ZVVybDogJ3RlbXBsYXRlcy9waWVDaGFydC5odG1sJyxcbiAgICAgIHNjb3BlOiB7XG4gICAgICAgIGRhdGE6ICc9JyxcbiAgICAgICAgc2l6ZTogJz0nXG4gICAgICB9LFxuICAgICAgbGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW1lbnQsIGF0dHJzKSB7XG4gICAgICAgIHNjb3BlLnBpZUNoYXJ0ID0gbmV3IFBpZUNoYXJ0KHNjb3BlLCBlbGVtZW50KTtcblxuICAgICAgICBzY29wZS4kb24oJyRkZXN0cm95JywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgc2NvcGUucGllQ2hhcnQuZGVzdHJveSgpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xuICB9XSk7XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG59KSgpO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9