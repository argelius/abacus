!function(t){try{t=angular.module("abacus.templates")}catch(e){t=angular.module("abacus.templates",[])}t.run(["$templateCache",function(t){"use strict";t.put("templates/barChart.html","")}])}(),function(t){try{t=angular.module("abacus.templates")}catch(e){t=angular.module("abacus.templates",[])}t.run(["$templateCache",function(t){"use strict";t.put("templates/pieChart.html",'<svg ng-attr-width="{{ size }}" ng-attr-height="{{ size }}">\n  <g>\n    <g \n      ng-attr-stroke="{{ colors[$index] }}"\n      ng-attr-fill="{{ colors[$index] }}"\n      ng-repeat="sector in sectors">\n      <path\n        ng-attr-d="\n        M {{ sector[0][0] }} {{ sector[0][1] }}\n        L {{ sector[1][0] }} {{ sector[1][1] }}\n        A {{ radius }} {{ radius }} 0 {{ angles[$index] >= 180 ? 1 : 0 }} 1 {{ sector[2][0] }} {{ sector[2][1] }}\n        L {{ sector[0][0] }} {{ sector[0][1] }}\n        "\n      ></path>\n    </g>\n  </g>\n</svg>\n{{ angles }}\n')}])}(),function(){"use strict";angular.module("abacus",["abacus.templates"])}(),function(){angular.module("abacus").factory("$abacus",function(){var t={};return t.defaultColors=["#3366cc","#dc3912","#ff9900","#109618","#990099","#0099c6","#dd4477","#66aa00","#b82e2e","#316395","#994499","#22aa99","#aaaa11","#6633cc","#e67300","#8b0707","#651067","#329262","#5574a6","#3b3eac","#b77322","#16d620","#b91383","#f4359e","#9c5935","#a9c413","#2a778d","#668d1c","#bea413","#0c5922","#743411"],t.getColors=function(e){for(var a=new Array(e),n=0;e>n;n++)a[n]=t.defaultColors[n%t.defaultColors.length];return a},t})}(),function(){"use strict";angular.module("abacus").factory("PieChart",["$abacus",function(t){var e=function(t,e){this.scope=t,this.element=e,t.$watchCollection("data",this.refreshScope.bind(this)),t.$watch("size",this.refreshScope.bind(this))};return e.prototype.refreshScope=function(){this.scope.sectors=this.calculateSectors(),this.scope.radius=this.getRadius(),this.scope.angles=this.calculateAngles(),this.scope.colors=t.getColors(this.scope.sectors.length),console.log(this.scope.colors)},e.prototype.getValues=function(){return this.scope.data},e.prototype.getSize=function(){return this.scope.size},e.prototype.getRadius=function(){return this.getSize()/2},e.prototype.getMidPoint=function(){return[this.getSize()/2,this.getSize()/2]},e.prototype.calculateTotal=function(){return this.getValues().reduce(function(t,e){return t+e})},e.prototype.calculateAngles=function(){var t=this.getValues(),e=this.calculateTotal();return t.map(function(t){return t/e*360})},e.prototype.angleToCartesian=function(t){var e=this.getMidPoint(),a=this.getRadius(),n=Math.PI/180*t,s=e[0]+a*Math.cos(n),r=e[1]+a*Math.sin(n);return[s,r]},e.prototype.calculateSectors=function(){var t=this.calculateAngles(),e=this.getMidPoint(),a=new Array(t.length);a[0]=[e,this.angleToCartesian(0),this.angleToCartesian(t[0])];for(var n=1,s=t.length;s>n;n++)t[n]+=t[n-1],a[n]=[e,this.angleToCartesian(t[n-1]),this.angleToCartesian(t[n])];return console.log(a),a},e.prototype.destroy=function(){this.scope=this.element=null},e}])}(),function(){"use strict"}(),function(){"use strict";angular.module("abacus").directive("abcPieChart",["PieChart",function(t){return{restrict:"E",templateUrl:"templates/pieChart.html",scope:{data:"=",size:"="},link:function(e,a){e.pieChart=new t(e,a),e.$on("$destroy",function(){e.pieChart.destroy()})}}}])}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlbXBsYXRlcy5qcyIsImFiYWN1cy5qcyIsInBpZUNoYXJ0LmpzIiwiYmFyQ2hhcnQuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiYW5ndWxhciIsImVyciIsInJ1biIsIiR0ZW1wbGF0ZUNhY2hlIiwicHV0IiwiZmFjdG9yeSIsImFiYWN1cyIsImRlZmF1bHRDb2xvcnMiLCJnZXRDb2xvcnMiLCJuYnJPZkNvbG9ycyIsImNvbG9ycyIsIkFycmF5IiwiaSIsImxlbmd0aCIsIiRhYmFjdXMiLCJQaWVDaGFydCIsInNjb3BlIiwiZWxlbWVudCIsInRoaXMiLCIkd2F0Y2hDb2xsZWN0aW9uIiwicmVmcmVzaFNjb3BlIiwiYmluZCIsIiR3YXRjaCIsInByb3RvdHlwZSIsInNlY3RvcnMiLCJjYWxjdWxhdGVTZWN0b3JzIiwicmFkaXVzIiwiZ2V0UmFkaXVzIiwiYW5nbGVzIiwiY2FsY3VsYXRlQW5nbGVzIiwiY29uc29sZSIsImxvZyIsImdldFZhbHVlcyIsImRhdGEiLCJnZXRTaXplIiwic2l6ZSIsImdldE1pZFBvaW50IiwiY2FsY3VsYXRlVG90YWwiLCJyZWR1Y2UiLCJhIiwiYiIsInZhbHVlcyIsInRvdGFsIiwibWFwIiwidmFsdWUiLCJhbmdsZVRvQ2FydGVzaWFuIiwiYW5nbGUiLCJtaWRQb2ludCIsImFuZ2xlSW5SYWRpYW5zIiwiTWF0aCIsIlBJIiwieCIsImNvcyIsInkiLCJzaW4iLCJsIiwiZGVzdHJveSIsImRpcmVjdGl2ZSIsInJlc3RyaWN0IiwidGVtcGxhdGVVcmwiLCJsaW5rIiwicGllQ2hhcnQiLCIkb24iXSwibWFwcGluZ3MiOiJDQUFBLFNBQUFBLEdBQ0EsSUFBQUEsRUFBQUMsUUFBQUQsT0FBQSxvQkFDQSxNQUFBRSxHQUFBRixFQUFBQyxRQUFBRCxPQUFBLHVCQUNBQSxFQUFBRyxLQUFBLGlCQUFBLFNBQUFDLEdBQ0EsWUFDQUEsR0FBQUMsSUFBQSwwQkFDQSxVQUlBLFNBQUFMLEdBQ0EsSUFBQUEsRUFBQUMsUUFBQUQsT0FBQSxvQkFDQSxNQUFBRSxHQUFBRixFQUFBQyxRQUFBRCxPQUFBLHVCQUNBQSxFQUFBRyxLQUFBLGlCQUFBLFNBQUFDLEdBQ0EsWUFDQUEsR0FBQUMsSUFBQSwwQkFDQSxpa0JDaEJBLFdBQ0EsWUFFQUosU0FBQUQsT0FBQSxVQUFBLHdCQUhBLFdBQ0FDLFFBQUFELE9BQUEsVUFFQU0sUUFBQSxVQUFBLFdBQ0EsR0FBQUMsS0FjQSxPQVpBQSxHQUFBQyxlQUFBLFVBQUEsVUFBQSxVQUFBLFVBQUEsVUFBQSxVQUFBLFVBQUEsVUFBQSxVQUFBLFVBQUEsVUFBQSxVQUFBLFVBQUEsVUFBQSxVQUFBLFVBQUEsVUFBQSxVQUFBLFVBQUEsVUFBQSxVQUFBLFVBQUEsVUFBQSxVQUFBLFVBQUEsVUFBQSxVQUFBLFVBQUEsVUFBQSxVQUFBLFdBRUFELEVBQUFFLFVBQUEsU0FBQUMsR0FHQSxJQUFBLEdBRkFDLEdBQUEsR0FBQUMsT0FBQUYsR0FFQUcsRUFBQSxFQUFBSCxFQUFBRyxFQUFBQSxJQUNBRixFQUFBRSxHQUFBTixFQUFBQyxjQUFBSyxFQUFBTixFQUFBQyxjQUFBTSxPQUdBLE9BQUFILElBR0FKLE9DbEJBLFdBQ0EsWUFFQU4sU0FBQUQsT0FBQSxVQUVBTSxRQUFBLFlBQUEsVUFBQSxTQUFBUyxHQUNBLEdBQUFDLEdBQUEsU0FBQUMsRUFBQUMsR0FDQUMsS0FBQUYsTUFBQUEsRUFDQUUsS0FBQUQsUUFBQUEsRUFFQUQsRUFBQUcsaUJBQUEsT0FBQUQsS0FBQUUsYUFBQUMsS0FBQUgsT0FDQUYsRUFBQU0sT0FBQSxPQUFBSixLQUFBRSxhQUFBQyxLQUFBSCxPQTRGQSxPQXpGQUgsR0FBQVEsVUFBQUgsYUFBQSxXQUNBRixLQUFBRixNQUFBUSxRQUFBTixLQUFBTyxtQkFDQVAsS0FBQUYsTUFBQVUsT0FBQVIsS0FBQVMsWUFDQVQsS0FBQUYsTUFBQVksT0FBQVYsS0FBQVcsa0JBQ0FYLEtBQUFGLE1BQUFOLE9BQUFJLEVBQUFOLFVBQUFVLEtBQUFGLE1BQUFRLFFBQUFYLFFBQ0FpQixRQUFBQyxJQUFBYixLQUFBRixNQUFBTixTQU1BSyxFQUFBUSxVQUFBUyxVQUFBLFdBQ0EsTUFBQWQsTUFBQUYsTUFBQWlCLE1BR0FsQixFQUFBUSxVQUFBVyxRQUFBLFdBQ0EsTUFBQWhCLE1BQUFGLE1BQUFtQixNQUdBcEIsRUFBQVEsVUFBQUksVUFBQSxXQUNBLE1BQUFULE1BQUFnQixVQUFBLEdBR0FuQixFQUFBUSxVQUFBYSxZQUFBLFdBQ0EsT0FBQWxCLEtBQUFnQixVQUFBLEVBQUFoQixLQUFBZ0IsVUFBQSxJQUdBbkIsRUFBQVEsVUFBQWMsZUFBQSxXQUNBLE1BQUFuQixNQUFBYyxZQUFBTSxPQUFBLFNBQUFDLEVBQUFDLEdBQ0EsTUFBQUQsR0FBQUMsS0FPQXpCLEVBQUFRLFVBQUFNLGdCQUFBLFdBQ0EsR0FBQVksR0FBQXZCLEtBQUFjLFlBQ0FVLEVBQUF4QixLQUFBbUIsZ0JBRUEsT0FBQUksR0FBQUUsSUFBQSxTQUFBQyxHQUNBLE1BQUFBLEdBQUFGLEVBQUEsT0FJQTNCLEVBQUFRLFVBQUFzQixpQkFBQSxTQUFBQyxHQUNBLEdBQUFDLEdBQUE3QixLQUFBa0IsY0FDQVYsRUFBQVIsS0FBQVMsWUFFQXFCLEVBQUFDLEtBQUFDLEdBQUEsSUFBQUosRUFFQUssRUFBQUosRUFBQSxHQUFBckIsRUFBQXVCLEtBQUFHLElBQUFKLEdBQ0FLLEVBQUFOLEVBQUEsR0FBQXJCLEVBQUF1QixLQUFBSyxJQUFBTixFQUVBLFFBQUFHLEVBQUFFLElBTUF0QyxFQUFBUSxVQUFBRSxpQkFBQSxXQUNBLEdBQUFHLEdBQUFWLEtBQUFXLGtCQUNBa0IsRUFBQTdCLEtBQUFrQixjQUNBWixFQUFBLEdBQUFiLE9BQUFpQixFQUFBZixPQUVBVyxHQUFBLElBQ0F1QixFQUNBN0IsS0FBQTJCLGlCQUFBLEdBQ0EzQixLQUFBMkIsaUJBQUFqQixFQUFBLElBR0EsS0FBQSxHQUFBaEIsR0FBQSxFQUFBMkMsRUFBQTNCLEVBQUFmLE9BQUEwQyxFQUFBM0MsRUFBQUEsSUFDQWdCLEVBQUFoQixJQUFBZ0IsRUFBQWhCLEVBQUEsR0FFQVksRUFBQVosSUFDQW1DLEVBQ0E3QixLQUFBMkIsaUJBQUFqQixFQUFBaEIsRUFBQSxJQUNBTSxLQUFBMkIsaUJBQUFqQixFQUFBaEIsSUFLQSxPQUZBa0IsU0FBQUMsSUFBQVAsR0FFQUEsR0FHQVQsRUFBQVEsVUFBQWlDLFFBQUEsV0FDQXRDLEtBQUFGLE1BQUFFLEtBQUFELFFBQUEsTUFHQUYsUUN2R0EsV0FDQSxnQkREQSxXQUNBLFlBRUFmLFNBQUFELE9BQUEsVUFFQTBELFVBQUEsZUFBQSxXQUFBLFNBQUExQyxHQUNBLE9BQ0EyQyxTQUFBLElBQ0FDLFlBQUEsMEJBQ0EzQyxPQUNBaUIsS0FBQSxJQUNBRSxLQUFBLEtBRUF5QixLQUFBLFNBQUE1QyxFQUFBQyxHQUNBRCxFQUFBNkMsU0FBQSxHQUFBOUMsR0FBQUMsRUFBQUMsR0FFQUQsRUFBQThDLElBQUEsV0FBQSxXQUNBOUMsRUFBQTZDLFNBQUFMIiwiZmlsZSI6ImFiYWN1cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24obW9kdWxlKSB7XG50cnkgeyBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgnYWJhY3VzLnRlbXBsYXRlcycpOyB9XG5jYXRjaChlcnIpIHsgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ2FiYWN1cy50ZW1wbGF0ZXMnLCBbXSk7IH1cbm1vZHVsZS5ydW4oWyckdGVtcGxhdGVDYWNoZScsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICd1c2Ugc3RyaWN0JztcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCd0ZW1wbGF0ZXMvYmFyQ2hhcnQuaHRtbCcsXG4gICAgJycpO1xufV0pO1xufSkoKTtcblxuKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHsgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ2FiYWN1cy50ZW1wbGF0ZXMnKTsgfVxuY2F0Y2goZXJyKSB7IG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdhYmFjdXMudGVtcGxhdGVzJywgW10pOyB9XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAndXNlIHN0cmljdCc7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dCgndGVtcGxhdGVzL3BpZUNoYXJ0Lmh0bWwnLFxuICAgICc8c3ZnIG5nLWF0dHItd2lkdGg9XCJ7eyBzaXplIH19XCIgbmctYXR0ci1oZWlnaHQ9XCJ7eyBzaXplIH19XCI+XFxuJyArXG4gICAgJyAgPGc+XFxuJyArXG4gICAgJyAgICA8ZyBcXG4nICtcbiAgICAnICAgICAgbmctYXR0ci1zdHJva2U9XCJ7eyBjb2xvcnNbJGluZGV4XSB9fVwiXFxuJyArXG4gICAgJyAgICAgIG5nLWF0dHItZmlsbD1cInt7IGNvbG9yc1skaW5kZXhdIH19XCJcXG4nICtcbiAgICAnICAgICAgbmctcmVwZWF0PVwic2VjdG9yIGluIHNlY3RvcnNcIj5cXG4nICtcbiAgICAnICAgICAgPHBhdGhcXG4nICtcbiAgICAnICAgICAgICBuZy1hdHRyLWQ9XCJcXG4nICtcbiAgICAnICAgICAgICBNIHt7IHNlY3RvclswXVswXSB9fSB7eyBzZWN0b3JbMF1bMV0gfX1cXG4nICtcbiAgICAnICAgICAgICBMIHt7IHNlY3RvclsxXVswXSB9fSB7eyBzZWN0b3JbMV1bMV0gfX1cXG4nICtcbiAgICAnICAgICAgICBBIHt7IHJhZGl1cyB9fSB7eyByYWRpdXMgfX0gMCB7eyBhbmdsZXNbJGluZGV4XSA+PSAxODAgPyAxIDogMCB9fSAxIHt7IHNlY3RvclsyXVswXSB9fSB7eyBzZWN0b3JbMl1bMV0gfX1cXG4nICtcbiAgICAnICAgICAgICBMIHt7IHNlY3RvclswXVswXSB9fSB7eyBzZWN0b3JbMF1bMV0gfX1cXG4nICtcbiAgICAnICAgICAgICBcIlxcbicgK1xuICAgICcgICAgICA+PC9wYXRoPlxcbicgK1xuICAgICcgICAgPC9nPlxcbicgK1xuICAgICcgIDwvZz5cXG4nICtcbiAgICAnPC9zdmc+XFxuJyArXG4gICAgJ3t7IGFuZ2xlcyB9fVxcbicgK1xuICAgICcnKTtcbn1dKTtcbn0pKCk7XG4iLCIoZnVuY3Rpb24oKSB7XG4gIGFuZ3VsYXIubW9kdWxlKCdhYmFjdXMnKVxuXG4gIC5mYWN0b3J5KCckYWJhY3VzJywgZnVuY3Rpb24oKSB7XG4gICAgdmFyIGFiYWN1cyA9IHt9O1xuXG4gICAgYWJhY3VzLmRlZmF1bHRDb2xvcnMgPSBbJyMzMzY2Y2MnLCcjZGMzOTEyJywnI2ZmOTkwMCcsJyMxMDk2MTgnLCcjOTkwMDk5JywnIzAwOTljNicsJyNkZDQ0NzcnLCcjNjZhYTAwJywnI2I4MmUyZScsJyMzMTYzOTUnLCcjOTk0NDk5JywnIzIyYWE5OScsJyNhYWFhMTEnLCcjNjYzM2NjJywnI2U2NzMwMCcsJyM4YjA3MDcnLCcjNjUxMDY3JywnIzMyOTI2MicsJyM1NTc0YTYnLCcjM2IzZWFjJywnI2I3NzMyMicsJyMxNmQ2MjAnLCcjYjkxMzgzJywnI2Y0MzU5ZScsJyM5YzU5MzUnLCcjYTljNDEzJywnIzJhNzc4ZCcsJyM2NjhkMWMnLCcjYmVhNDEzJywnIzBjNTkyMicsJyM3NDM0MTEnXTtcblxuICAgIGFiYWN1cy5nZXRDb2xvcnMgPSBmdW5jdGlvbihuYnJPZkNvbG9ycykge1xuICAgICAgdmFyIGNvbG9ycyA9IG5ldyBBcnJheShuYnJPZkNvbG9ycyk7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbmJyT2ZDb2xvcnM7IGkrKykge1xuICAgICAgICBjb2xvcnNbaV0gPSBhYmFjdXMuZGVmYXVsdENvbG9yc1tpICUgYWJhY3VzLmRlZmF1bHRDb2xvcnMubGVuZ3RoXTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbG9ycztcbiAgICB9O1xuXG4gICAgcmV0dXJuIGFiYWN1cztcbiAgfSk7XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgYW5ndWxhci5tb2R1bGUoJ2FiYWN1cycpXG5cbiAgLmRpcmVjdGl2ZSgnYWJjUGllQ2hhcnQnLCBbJ1BpZUNoYXJ0JywgZnVuY3Rpb24oUGllQ2hhcnQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcmVzdHJpY3Q6ICdFJyxcbiAgICAgIHRlbXBsYXRlVXJsOiAndGVtcGxhdGVzL3BpZUNoYXJ0Lmh0bWwnLFxuICAgICAgc2NvcGU6IHtcbiAgICAgICAgZGF0YTogJz0nLFxuICAgICAgICBzaXplOiAnPSdcbiAgICAgIH0sXG4gICAgICBsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlbWVudCwgYXR0cnMpIHtcbiAgICAgICAgc2NvcGUucGllQ2hhcnQgPSBuZXcgUGllQ2hhcnQoc2NvcGUsIGVsZW1lbnQpO1xuXG4gICAgICAgIHNjb3BlLiRvbignJGRlc3Ryb3knLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICBzY29wZS5waWVDaGFydC5kZXN0cm95KCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07XG4gIH1dKTtcbn0pKCk7XG4iLCIoZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0Jztcbn0pKCk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=